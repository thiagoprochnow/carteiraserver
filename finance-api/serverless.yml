# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: finance-api

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  profile: admin
  stage: dev
  region: us-east-1
  memorySize: 128
  versionFunctions: false
  stackTags:
      Client: proch
  environment:
      DYNAMODB_TABLE_STOCK_EV: stockEvents-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_STOCK_EV}"

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get

  stockCreateEvent:
      handler: stocks.createEvent
      events:
       - http:
           path: stocks/create
           method: post
  stockListEvents:
      handler: stocks.listEvents
      events:
       - http:
           path: stocks/list
           method: get
 
# you can add CloudFormation resource templates here
resources:
  Resources:
    StockDynamoDbTable:
        Type: 'AWS::DynamoDB::Table'
        Properties:
            AttributeDefinitions:
                -
                  AttributeName: id
                  AttributeType: S
                -
                  AttributeName: date
                  AttributeType: N
            KeySchema:
                -
                  AttributeName: id
                  KeyType: HASH
                -
                  AttributeName: date
                  KeyType: RANGE
            ProvisionedThroughput:
                ReadCapacityUnits: 1
                WriteCapacityUnits: 1
            TableName: ${self:provider.environment.DYNAMODB_TABLE_STOCK_EV}
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
